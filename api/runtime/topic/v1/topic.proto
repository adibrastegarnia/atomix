/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.runtime.topic.v1;

option java_package = "io.atomix.api.topic.v1";
option java_outer_classname = "TopicV1";
option java_multiple_files = true;

import "runtime/v1/runtime.proto";
import "gogoproto/gogo.proto";
import "google/protobuf/timestamp.proto";

service Topic {
    // Create creates the topic
    rpc Create (CreateRequest) returns (CreateResponse);

    // Close closes the topic
    rpc Close (CloseRequest) returns (CloseResponse);

    // Publish publishes a message to the topic
    rpc Publish(PublishRequest) returns (PublishResponse);

    // Subscribe subscribes to receive messages from the topic
    rpc Subscribe(SubscribeRequest) returns (stream SubscribeResponse);
}

message CreateRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    repeated string tags = 2;
}

message CreateResponse {

}

message CloseRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message CloseResponse {

}

message PublishRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    bytes payload = 2;
}

message PublishResponse {

}

message SubscribeRequest {
    atomix.runtime.v1.PrimitiveID id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message SubscribeResponse {
    uint64 offset = 1;
    google.protobuf.Timestamp timestamp = 2 [
        (gogoproto.stdtime) = true
    ];
    bytes payload = 3;
}
