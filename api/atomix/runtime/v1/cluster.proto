/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.management.v1;

import "atomix/runtime/v1/driver.proto";
import "google/protobuf/any.proto";
import "gogoproto/gogo.proto";

service ClusterService {
    rpc GetCluster (GetClusterRequest) returns (GetClusterResponse);
    rpc ListClusters (ListClustersRequest) returns (ListClustersResponse);
    rpc CreateCluster (CreateClusterRequest) returns (CreateClusterResponse);
    rpc UpdateCluster (UpdateClusterRequest) returns (UpdateClusterResponse);
    rpc DeleteCluster (DeleteClusterRequest) returns (DeleteClusterResponse);
}

message ClusterId {
    option (gogoproto.equal) = true;
    string namespace = 1;
    string name = 2;
}

message ClusterMeta {
    ClusterId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    uint64 version = 2 [
        (gogoproto.casttype) = "ObjectVersion"
    ];
    map<string, string> labels = 3;
}

message Cluster {
    ClusterMeta meta = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.embed) = true
    ];
    ClusterSpec spec = 2 [
        (gogoproto.nullable) = false
    ];
    ClusterStatus status = 3 [
        (gogoproto.nullable) = false
    ];
}

message ClusterSpec {
    DriverId driver = 1 [
        (gogoproto.nullable) = false
    ];
    google.protobuf.Any config = 2;
}

message ClusterStatus {
    bool connected = 1;
}

message GetClusterRequest {
    ClusterId cluster_id = 1 [
        (gogoproto.customname) = "ClusterID",
        (gogoproto.nullable) = false
    ];
}

message GetClusterResponse {
    Cluster cluster = 1;
}

message ListClustersRequest {
    bool watch = 1;
}

message ListClustersResponse {
    repeated Cluster clusters = 1;
}

message CreateClusterRequest {
    Cluster cluster = 1;
}

message CreateClusterResponse {
    Cluster cluster = 1;
}

message UpdateClusterRequest {
    Cluster cluster = 1;
}

message UpdateClusterResponse {
    Cluster cluster = 1;
}

message DeleteClusterRequest {
    Cluster cluster = 1;
}

message DeleteClusterResponse {

}
