/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.runtime.v1;

import "gogoproto/gogo.proto";

service PrimitiveManager {
    rpc GetPrimitive (GetPrimitiveRequest) returns (GetPrimitiveResponse);
    rpc CreatePrimitive (CreatePrimitiveRequest) returns (CreatePrimitiveResponse);
    rpc UpdatePrimitive (UpdatePrimitiveRequest) returns (UpdatePrimitiveResponse);
    rpc DeletePrimitive (DeletePrimitiveRequest) returns (DeletePrimitiveResponse);
}

message Primitive {
    PrimitiveMeta meta = 1 [
        (gogoproto.nullable) = false,
        (gogoproto.embed) = true
    ];
}

message PrimitiveId {
    string name = 1;
}

message PrimitiveMeta {
    PrimitiveId primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.nullable) = false
    ];
    map<string, string> labels = 2;
}

message RequestHeaders {
    PrimitiveId primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.nullable) = false
    ];
}

message ResponseHeaders {

}

message GetPrimitiveRequest {
    PrimitiveId primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.nullable) = false
    ];
}

message GetPrimitiveResponse {
    Primitive primitive = 1 [
        (gogoproto.nullable) = false
    ];
}

message CreatePrimitiveRequest {
    Primitive primitive = 1 [
        (gogoproto.nullable) = false
    ];
}

message CreatePrimitiveResponse {

}

message UpdatePrimitiveRequest {
    Primitive primitive = 1 [
        (gogoproto.nullable) = false
    ];
}

message UpdatePrimitiveResponse {

}

message DeletePrimitiveRequest {
    PrimitiveId primitive_id = 1 [
        (gogoproto.customname) = "PrimitiveID",
        (gogoproto.nullable) = false
    ];
}

message DeletePrimitiveResponse {

}
