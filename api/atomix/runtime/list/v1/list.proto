/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.runtime.list.v1;

import "atomix/runtime/v1/primitive.proto";
import "atomix/runtime/time/v1/timestamp.proto";
import "gogoproto/gogo.proto";

// List is a service for a list primitive
service List {
    // Create creates the list
    rpc Create (CreateRequest) returns (CreateResponse);

    // Close closes the list
    rpc Close (CloseRequest) returns (CloseResponse);

    // Size gets the number of elements in the list
    rpc Size (SizeRequest) returns (SizeResponse);

    // Append appends a value to the list
    rpc Append (AppendRequest) returns (AppendResponse);

    // Insert inserts a value at a specific index in the list
    rpc Insert (InsertRequest) returns (InsertResponse);

    // Get gets the value at an index in the list
    rpc Get (GetRequest) returns (GetResponse);

    // Set sets the value at an index in the list
    rpc Set (SetRequest) returns (SetResponse);

    // Remove removes an element from the list
    rpc Remove (RemoveRequest) returns (RemoveResponse);

    // Clear removes all elements from the list
    rpc Clear (ClearRequest) returns (ClearResponse);

    // Events listens for change events
    rpc Events (EventsRequest) returns (stream EventsResponse);

    // Elements streams all elements in the list
    rpc Elements (ElementsRequest) returns (stream ElementsResponse);
}

message CreateRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    map<string, string> tags = 2;
}

message CreateResponse {

}

message CloseRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message CloseResponse {

}

message SizeRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message SizeResponse {
    uint32 size = 1;
}

message ContainsRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    Value value = 2 [
        (gogoproto.nullable) = false
    ];
}

message ContainsResponse {
    bool contains = 1;
}

message AppendRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    Value value = 2 [
        (gogoproto.nullable) = false
    ];
}

message AppendResponse {

}

message GetRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    uint32 index = 2;
}

message GetResponse {
    Item item = 1 [
        (gogoproto.nullable) = false
    ];
}

message SetRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    uint32 index = 2;
    Value value = 3 [
        (gogoproto.embed) = true,
        (gogoproto.nullable) = false
    ];
    atomix.runtime.time.v1.Timestamp timestamp = 4;
}

message SetResponse {
    Item item = 1 [
        (gogoproto.nullable) = false
    ];
}

message InsertRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    uint32 index = 2;
    Value value = 3 [
        (gogoproto.embed) = true,
        (gogoproto.nullable) = false
    ];
}

message InsertResponse {
    Item item = 1 [
        (gogoproto.nullable) = false
    ];
}

message RemoveRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    uint32 index = 2;
    atomix.runtime.time.v1.Timestamp timestamp = 3;
}

message RemoveResponse {
    Item item = 1 [
        (gogoproto.nullable) = false
    ];
}

message ClearRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message ClearResponse {

}

message EventsRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    bool replay = 2;
}

message EventsResponse {
    Event event = 1 [
        (gogoproto.nullable) = false
    ];
}

message Event {
    Type type = 1;
    Item item = 2 [
        (gogoproto.nullable) = false
    ];

    enum Type {
        NONE = 0;
        ADD = 1;
        REMOVE = 2;
        REPLAY = 3;
    }
}

message ElementsRequest {
    atomix.runtime.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message ElementsResponse {
    Item item = 1 [
        (gogoproto.nullable) = false
    ];
}

message Item {
    uint32 index = 1;
    Value value = 2 [
        (gogoproto.embed) = true,
        (gogoproto.nullable) = false
    ];
    atomix.runtime.time.v1.Timestamp timestamp = 3;
}

message Value {
    string value = 1;
}
