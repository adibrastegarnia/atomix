/*
SPDX-FileCopyrightText: 2022-present Open Networking Foundation <info@opennetworking.org>

SPDX-License-Identifier: Apache-2.0
*/

syntax = "proto3";

package atomix.countermap.v1;

option java_package = "io.atomix.api.countermap.v1";
option java_outer_classname = "CounterMapV1";
option java_multiple_files = true;

import "google/protobuf/duration.proto";
import "atomix/v1/primitive.proto";
import "gogoproto/gogo.proto";

// CounterMap is a service for a counter map primitive
service CounterMap {
    // Create creates the map
    rpc Create (CreateRequest) returns (CreateResponse);

    // Close closes the map
    rpc Close (CloseRequest) returns (CloseResponse);

    // Size returns the size of the map
    rpc Size (SizeRequest) returns (SizeResponse);

    // Set sets an entry into the map
    rpc Set (SetRequest) returns (SetResponse);

    // Insert inserts an entry into the map
    rpc Insert (InsertRequest) returns (InsertResponse);

    // Update updates an entry in the map
    rpc Update (UpdateRequest) returns (UpdateResponse);

    // Increment increments a counter in the map
    rpc Increment (IncrementRequest) returns (IncrementResponse);

    // Decrement decrements a counter in the map
    rpc Decrement (DecrementRequest) returns (DecrementResponse);

    // Get gets the entry for a key
    rpc Get (GetRequest) returns (GetResponse);

    // Remove removes an entry from the map
    rpc Remove (RemoveRequest) returns (RemoveResponse);

    // Clear removes all entries from the map
    rpc Clear (ClearRequest) returns (ClearResponse);

    // Lock locks a key in the map
    rpc Lock(LockRequest) returns (LockResponse);

    // Unlock unlocks a key in the map
    rpc Unlock(UnlockRequest) returns (UnlockResponse);

    // Events listens for change events
    rpc Events (EventsRequest) returns (stream EventsResponse);

    // Entries lists all entries in the map
    rpc Entries (EntriesRequest) returns (stream EntriesResponse);
}

message CreateRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    repeated string tags = 2;
}

message CreateResponse {

}

message CloseRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message CloseResponse {

}

message SizeRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message SizeResponse {
    uint32 size = 1;
}

message SetRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 value = 3;
}

message SetResponse {
    int64 prev_value = 1;
}

message InsertRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 value = 3;
}

message InsertResponse {

}

message UpdateRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 value = 3;
    int64 prev_value = 4;
}

message UpdateResponse {
    int64 prev_value = 1;
}

message IncrementRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 delta = 3;
}

message IncrementResponse {
    int64 prev_value = 1;
}

message DecrementRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 delta = 3;
}

message DecrementResponse {
    int64 prev_value = 1;
}

message GetRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
}

message GetResponse {
    int64 value = 1;
}

message RemoveRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
    int64 prev_value = 3;
}

message RemoveResponse {
    int64 value = 1;
}

message ClearRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
}

message ClearResponse {

}

message LockRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    repeated string keys = 2;
    google.protobuf.Duration timeout = 3 [
        (gogoproto.stdduration) = true
    ];
}

message LockResponse {

}

message UnlockRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    repeated string keys = 2;
}

message UnlockResponse {

}

message EntriesRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    bool watch = 2;
}

message EntriesResponse {
    Entry entry = 1 [
        (gogoproto.nullable) = false
    ];
}

message EventsRequest {
    atomix.v1.PrimitiveId id = 1 [
        (gogoproto.customname) = "ID",
        (gogoproto.nullable) = false
    ];
    string key = 2;
}

message EventsResponse {
    Event event = 2 [
        (gogoproto.nullable) = false
    ];
}

message Event {
    string key = 1;

    oneof event {
        Inserted inserted = 2;
        Updated updated = 3;
        Removed removed = 4;
    }

    message Inserted {
        int64 value = 1;
    }

    message Updated {
        int64 value = 1;
        int64 prev_value = 2;
    }

    message Removed {
        int64 value = 1;
    }
}

message Entry {
    string key = 1;
    int64 value = 2;
}
